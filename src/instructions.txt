DO NOT INCLUDE THIS FILE IN RELEASE
Word Wrap shortcut: Alt + Z

1. Compile the ReflectionUtils.kt:
    kotlinc src/wfg/reflection/ReflectionUtils.kt -d jars/libs/compiled/

2. Package it as a jar:
    jar cf jars/libs/reflection.jar -C jars/libs/compiled .

3. Delete the directory jars/libs/compiled/

4. Compile the main project. Navigate to Ltv_Economy and run:
    mvn clean package

6. Delete the logs from starsector_core/starsector.log

Extra Instructions:

- Use VisualVM OQL Console to look for strings in the game to find and update broken obfuscated code
  -> select s from java.lang.String s where s.toString().contains("target_string")

- Renamed libs temporarily to txt files so the compiler doesn't try to compile them (Win10):
  -> Get-ChildItem -Path src\com -Recurse -Filter *.java | Rename-Item -NewName { $_.Name -replace '\.java$','.txt' }
  -> Get-ChildItem -Path src\com_core -Recurse -Filter *.java | Rename-Item -NewName { $_.Name -replace '\.java$','.txt' }

- Add the prefix "Ltv" to classes who also have a vanilla counterpart. Like BaseIndustry and LtvBaseIndustry

- Search for implementation for API's using the following commands
  -> implements\s+[^{]*\bInteractionDialogAPI\b

- Standard porter message for AI agent:
  -> Create me a porter message with all the relevant info about what we were working on and the overall project. This chat is getting slow. Paragraph format.

runcode for (PlanetAPI p : Global.getSector().getPlayerFleet().getStarSystem().getPlanets()) if (p.getFullName().contains("Mesha")) { p.getSpec().setTexture("graphics/planets/US_planet_textureAtoll.jpg"); p.applySpecChanges(); break; }

runcode SectorEntityToken fleet = Global.getSector().getPlayerFleet();  
      StarSystemAPI sys = (StarSystemAPI)fleet.getContainingLocation();
      SectorEntityToken stable = fleet.getContainingLocation().addCustomEntity(null, null, "stable_location", "neutral");
      float orbitRadius = com.fs.starfarer.api.util.Misc.getDistance(fleet, sys.getCenter());
      float orbitDays = orbitRadius / (20f + new Random().nextFloat() * 5f);
      float angle = com.fs.starfarer.api.util.Misc.getAngleInDegrees(sys.getCenter().getLocation(), fleet.getLocation());
      stable.setCircularOrbit(sys.getCenter(), angle, orbitRadius, orbitDays);